install.packages(c("data.table", "dplyr", "ggplot2", "GGally", "ggpubr", "lme4", "lmerTest"))
library(data.table)
library(dplyr)
library(ggplot2)
library(GGally)
library(ggpubr)
library(lme4)
library(lmerTest)

Work.dir <- as.character("/Users/joshualaite/Desktop/Mutational Signatures in SCC/R_Sample_Outputs_Research_Project/Somatic_Further")

setwd(Work.dir)

# read in the data
all <- fread("/Users/joshualaite/Desktop/Mutational Signatures in SCC/R_Files/R_Top10/Somatic.all.samples.top.signatures.txt")
sampleinfo <- fread("/Users/joshualaite/Desktop/Mutational Signatures in SCC/R_Files/Indolent.Progressive.Samples-for-JL-extra_information.txt")

# add sample info
all <- left_join(all, sampleinfo, by="SampleID")
all <- mutate(all, Sample_Site=paste0(Local_PatientID, "_", AnatomicSite_Text))

head(all)

# ggpairs
ggpairs(select(all, signature, Sig_Contribution,Outcome, Age.at.sampling.years,AnatomicSite_Text, Histology, Gender, Pack.year.history, Prev.history.lung.cancer, COPD, Smoking_history) %>% filter(signature =="SBS4"))


# Filter for CIS
all.cis <- all %>% filter(Histology == "CIS")

# Fit the mixed linear effects model
model <- lmer(Sig_Contribution ~ Outcome + (1 | Sample_Site), data = all.cis)

# Get p-value for the fixed effect using summary
summary_model <- summary(model)
outcome_p_value <- summary_model$coefficients[2, "Pr(>|t|)"]

# Boxplot outcome vs sig_contr. split by signature
# stat_compare_means used to compare means
ggplot(all.cis, aes(x = Outcome, y = Sig_Contribution)) +
  geom_boxplot() +
  geom_jitter(width = 0.2) +
  theme_cowplot(font_size = 20) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(x = "Outcome", y = "Signature Contribution") +
  facet_grid(~signature) +
  stat_compare_means() +
  # Add the mixed effects model results to the plot
  geom_smooth(method = "lm", aes(group = 1), se = FALSE, fullrange = TRUE, color = "red") +
  # Display the fixed effect p-value on the plot
  annotate(
    "text", x = 1.8, y = 0.8,
    label = paste("Outcome p =", formatC(outcome_p_value, digits = 3)),
    color = "red"
  )
